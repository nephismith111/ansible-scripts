---
# tasks file for elasticsearch

- name: Installation tasks
  block:
    - name: Download and install Elasticsearch GPG key
      shell: |
        wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg
      args:
        creates: /usr/share/keyrings/elasticsearch-keyring.gpg

    - name: Install apt-transport-https
      apt:
        name: apt-transport-https
        state: present

    - name: Add Elasticsearch repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main"
        state: present
        filename: elastic-8.x

    - name: Install Elasticsearch and Kibana packages
      apt:
        name:
          - kibana
          - unzip
        state: present
        update_cache: yes

    - name: Install Elasticsearch package
      apt:
        name:
          - elasticsearch
        state: present
        update_cache: yes
      register: elastic_install

    - name: Extract elastic password from installation output
      set_fact:
        elastic_password: "{{ elastic_install.stdout_lines | select('regex', 'elastic built-in superuser is :') | first | regex_replace('^.*is : (.*)$', '\\1') }}"
      when: elastic_install.changed

    - name: Display elastic password
      debug:
        msg: "Elastic user password: ⭐ {{ elastic_password }} ⭐"
      when: elastic_install.changed

    - name: Configure Elasticsearch service state
      systemd:
        name: elasticsearch
        enabled: yes
        state: stopped
  tags:
    - installation

- name: Configuration tasks
  block:
    - name: Ensure Elasticsearch is stopped before configuration
      systemd:
        name: elasticsearch
        state: stopped

    - name: Backup original elasticsearch.yml if not exists
      copy:
        src: /etc/elasticsearch/elasticsearch.yml
        dest: /etc/elasticsearch/elasticsearch.yml.orig
        remote_src: yes
        force: no

    - name: Deploy elasticsearch configuration
      template:
        src: elasticsearch.yml.j2
        dest: /etc/elasticsearch/elasticsearch.yml
        owner: root
        group: elasticsearch
        mode: '0660'
  tags:
    - configure

- name: Certificate preparation tasks
  block:
    - name: Create staging directory
      file:
        path: /tmp/elastic-certs
        state: directory
        mode: '0750'

    - name: Create certificate staging subdirectories
      file:
        path: "/tmp/elastic-certs/{{ item }}"
        state: directory
        mode: '0750'
      loop:
        - http
        - transport

    - name: Copy certificate files to staging
      copy:
        src: "{{ inventory_hostname }}/{{ item.src }}"
        dest: "/tmp/elastic-certs/{{ item.dest }}"
        mode: '0640'
      loop:
        - { src: 'http.pem', dest: 'http/cert.pem' }
        - { src: 'http.key', dest: 'http/key.pem' }
        - { src: 'http-ca.pem', dest: 'http/ca.pem' }
        - { src: 'transport.pem', dest: 'transport/cert.pem' }
        - { src: 'transport.key', dest: 'transport/key.pem' }
        - { src: 'transport-ca.pem', dest: 'transport/ca.pem' }

    - name: Create HTTP PKCS12 keystore
      shell: |
        openssl pkcs12 -export \
          -inkey /tmp/elastic-certs/http/key.pem \
          -in /tmp/elastic-certs/http/cert.pem \
          -out /tmp/elastic-certs/http/http.p12 \
          -passout pass:{{ elasticsearch_cert_password }} \
          -name "{{ inventory_hostname }}_http"
      args:
        creates: /tmp/elastic-certs/http/http.p12

    - name: Import HTTP CA into keystore
      shell: |
        keytool -importcert \
          -noprompt \
          -keystore /tmp/elastic-certs/http/http.p12 \
          -storepass {{ elasticsearch_cert_password }} \
          -alias "ca" \
          -file /tmp/elastic-certs/http/ca.pem
      args:
        creates: /tmp/elastic-certs/http/http.p12.imported

    - name: Create transport PKCS12 keystore
      shell: |
        openssl pkcs12 -export \
          -inkey /tmp/elastic-certs/transport/key.pem \
          -in /tmp/elastic-certs/transport/cert.pem \
          -out /tmp/elastic-certs/transport/transport.p12 \
          -passout pass:{{ elasticsearch_cert_password }} \
          -name "{{ inventory_hostname }}_transport"
      args:
        creates: /tmp/elastic-certs/transport/transport.p12

    - name: Import transport CA into keystore
      shell: |
        keytool -importcert \
          -noprompt \
          -keystore /tmp/elastic-certs/transport/transport.p12 \
          -storepass {{ elasticsearch_cert_password }} \
          -alias "ca" \
          -file /tmp/elastic-certs/transport/ca.pem
      args:
        creates: /tmp/elastic-certs/transport/transport.p12.imported

    - name: Ensure certificate directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: '0750'
        owner: root
        group: elasticsearch
      loop:
        - /etc/elasticsearch/certs
        - /etc/elasticsearch/certs/http
        - /etc/elasticsearch/certs/transport

    - name: Copy final keystores to destination
      copy:
        src: "/tmp/elastic-certs/{{ item.src }}"
        dest: "/etc/elasticsearch/certs/{{ item.dest }}"
        remote_src: yes
        owner: root
        group: elasticsearch
        mode: '0640'
      loop:
        - { src: 'http/http.p12', dest: 'http/http.p12' }
        - { src: 'transport/transport.p12', dest: 'transport/transport.p12' }

    - name: Clean up staging directory
      file:
        path: /tmp/elastic-certs
        state: absent
  tags:
    - certificates

- name: Certificate rotation tasks
  block:
    - name: Ensure Elasticsearch is stopped before rotating certificates
      systemd:
        name: elasticsearch
        state: stopped

    - name: Update HTTP keystore path
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '^xpack.security.http.ssl.keystore.path:'
        line: 'xpack.security.http.ssl.keystore.path: {{ elasticsearch_http_keystore_path }}'
      when: elasticsearch_http_keystore_path is defined

    - name: Update transport keystore path
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '^xpack.security.transport.ssl.keystore.path:'
        line: 'xpack.security.transport.ssl.keystore.path: {{ elasticsearch_transport_keystore_path }}'
      when: elasticsearch_transport_keystore_path is defined

    - name: Update transport truststore path
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '^xpack.security.transport.ssl.truststore.path:'
        line: 'xpack.security.transport.ssl.truststore.path: {{ elasticsearch_transport_truststore_path }}'
      when: elasticsearch_transport_truststore_path is defined
  tags:
    - rotate-certs
